
# Season 1 Show Curve Clustering

```{r}
dct <- read.csv("CENT_dct.csv")
dct_spread <- read.csv("CENT_dct_spread.csv")
```

```{r}
s1_cluster <- dct_spread %>% 
  filter(Season_num == 1) %>%
  ungroup() %>%
  select(-X, -Network, -Show_Name, -Season_num)
```

## General K-Means Clustering

Using example from https://cran.r-project.org/web/packages/broom/vignettes/kmeans.html.

```{r}
set.seed(12)
kclusts <- data.frame(k = 1:15) %>% 
  group_by(k) %>% 
  do(kclust = kmeans(s1_cluster, .$k, nstart = 50))
```

```{r}
clusters <- kclusts %>% group_by(k) %>% do(tidy(.$kclust[[1]]))
assignments <- kclusts %>% group_by(k) %>% do(augment(.$kclust[[1]], s1_cluster))
clusterings <- kclusts %>% group_by(k) %>% do(glance(.$kclust[[1]]))
```

```{r}
ggplot(clusterings, aes(k, tot.withinss)) + 
  geom_line() +
  scale_x_discrete(limits = seq(1, 15))
```

```{r}
fviz_nbclust(s1_cluster, 
             kmeans, 
             method = "gap_stat",
             k.max = 15)
```

```{r}
fviz_nbclust(s1_cluster, 
             cluster::pam, 
             method = "gap_stat",
             k.max = 15)
```

```{r}
fviz_nbclust(s1_cluster, 
             hcut, 
             hc_method = "single",
             hc_metric = "euclidean",
             method = "gap_stat",
             k.max = 15)
```

```{r}
fviz_nbclust(s1_cluster, 
             hcut, 
             hc_method = "single",
             hc_metric = "pearson",
             method = "silhouette",
             k.max = 15,
             nboot = 500)
```

### 3 Clusters

```{r}
dct_clusters <- assignments %>% 
  filter(k == 3) %>% 
  ungroup() %>% 
  select(.cluster) %>% 
  rename(cluster_kmeans_3 = .cluster) %>% 
  bind_cols(filter(dct_spread, Season_num == 1)) 
```

```{r}
dct_clusters <- merge(dct_clusters[, c("cluster_kmeans_3", 
                                       "Show_Name")], 
                         dct, by = "Show_Name")
```

```{r}
g <- dct_clusters %>% 
  filter(Season_num == 1) %>% 
  ggplot(aes(x = period, y = dct_values, 
             color = Show_Name)) + 
  geom_line() + 
  facet_wrap(~ cluster_kmeans_3)

ggplotly(g)
```

### 8 Clusters

```{r}
dct_clusters <- assignments %>% 
  filter(k == 8) %>% 
  ungroup() %>% 
  select(.cluster) %>% 
  rename(cluster_kmeans_8 = .cluster) %>% 
  bind_cols(filter(dct_spread, Season_num == 1)) 
```

```{r}
dct_clusters <- merge(dct_clusters[, c("cluster_kmeans_8", 
                                       "Show_Name")], 
                         dct, by = "Show_Name")
```

```{r}
g <- dct_clusters %>% 
  filter(Season_num == 1) %>% 
  ggplot(aes(x = period, y = dct_values, 
             color = Show_Name)) + 
  geom_line() + 
  facet_wrap(~ cluster_kmeans_8)

ggplotly(g)
```

### 14 Clusters

```{r}
dct_clusters <- assignments %>% 
  filter(k == 14) %>% 
  ungroup() %>% 
  select(.cluster) %>% 
  rename(cluster_kmeans_14 = .cluster) %>% 
  bind_cols(filter(dct_spread, Season_num == 1)) 
```

```{r}
dct_clusters <- merge(dct_clusters[, c("cluster_kmeans_14", 
                                       "Show_Name")], 
                         dct, by = "Show_Name")
```

```{r}
g <- dct_clusters %>% 
  filter(Season_num == 1) %>% 
  ggplot(aes(x = period, y = dct_values, 
             color = Show_Name)) + 
  geom_line() + 
  facet_wrap(~ cluster_kmeans_14)

ggplotly(g)
```
