---
title: "R Notebook"
output:
  html_document: default
  html_notebook: default
---

```{r}
#########################################################################################
#
#Dependencies: PCA.Rmd, TADpole.Rmd, kmeans.Rmd, kshape_dtw.Rmd
#
#Purpose: puts diagnostics side-to-side with relevant statistics for decision making
#
#########################################################################################
```

```{r}
library(fpc)
library(DT)
```


PCA
```{r}
#requires execution of "clustering - PCA.Rmd"

#Create Distance Matrices for clusters
PCA_s1_3cl_d <- dist(df_pcaclusters_s1[,4:103])
PCA_s2_3cl_d <- dist(df_pcaclusters_s2[,4:103])
PCA_cont_3cl_d <- dist(df_pcaclusters_cont[,4:103])

#Diagnostics
diagnostics_PCA_s1_3cl <- cluster.stats(PCA_s1_3cl_d, df_pcaclusters_s1$cluster)
diagnostics_PCA_s2_3cl <- cluster.stats(PCA_s2_3cl_d, df_pcaclusters_s2$cluster)
diagnostics_PCA_cont_3cl <- cluster.stats(PCA_cont_3cl_d, df_pcaclusters_cont$cluster)

```


TADpole
```{r}
#requires execution of "clustering - TADpole.Rmd"

#Create Distance Matrices for clusters
tadpole_s1_5cl_d <- dist(tadpole_clust5_s1_df[,4:103])
tadpole_s1_3cl_d <- dist(tadpole_clust3_s1_df[,4:103])
tadpole_s2_5cl_d <- dist(tadpole_clust5_s2_df[,4:103])
tadpole_s2_3cl_d <- dist(tadpole_clust3_s2_df[,4:103])
tadpole_cont_5cl_d <- dist(tadpole_clust5_cont_df[,4:103])
tadpole_cont_3cl_d <- dist(tadpole_clust3_cont_df[,4:103])


#Diagnostics
diagnostics_tadpole_s1_5cl <- cluster.stats(tadpole_s1_5cl_d , tadpole_clust5_s1_df$cluster)
diagnostics_tadpole_s1_3cl <- cluster.stats(tadpole_s1_3cl_d , tadpole_clust3_s1_df$cluster)
diagnostics_tadpole_s2_5cl <- cluster.stats(tadpole_s2_5cl_d, tadpole_clust5_s2_df$cluster)
diagnostics_tadpole_s2_3cl <- cluster.stats(tadpole_s2_3cl_d, tadpole_clust3_s2_df$cluster)
diagnostics_tadpole_cont_5cl <- cluster.stats(tadpole_cont_5cl_d, tadpole_clust5_cont_df$cluster)
diagnostics_tadpole_cont_3cl <- cluster.stats(tadpole_cont_3cl_d, tadpole_clust3_cont_df$cluster)

```


K-means 
```{r}
#requires execution of "clustering - kmeans.Rmd"

#Create Distance Matrices for clusters
kmeans_s1_3cl_d <- dist(clusters3_s1_spread[, 6:105])
kmeans_s1_4cl_d <- dist(clusters4_s1_spread[, 6:105])
kmeans_s1_5cl_d <- dist(clusters5_s1_spread[, 6:105])
kmeans_s2_3cl_d <- dist(clusters3_s2_spread[, 6:105])
kmeans_s2_4cl_d <- dist(clusters4_s2_spread[, 6:105])
kmeans_s2_5cl_d <- dist(clusters5_s2_spread[, 6:105])
kmeans_s1_s2_3cl_d <- dist(clusters3_s1_s2_spread[, 6:205])
kmeans_s1_s2_5cl_d <- dist(clusters5_s1_s2_spread[, 6:205])
kmeans_cont_3cl_d <- dist(clusters3_cont_spread[, 5:104])
kmeans_cont_5cl_d <- dist(clusters5_cont_spread[, 5:104])

#Diagnostics
diagnostics_kmeans_s1_3cl <- cluster.stats(kmeans_s1_3cl_d, as.numeric(clusters3_s1_spread$cluster_kmeans_3))
diagnostics_kmeans_s1_4cl <- cluster.stats(kmeans_s1_4cl_d, as.numeric(clusters4_s1_spread$cluster_kmeans_4))
diagnostics_kmeans_s1_5cl <- cluster.stats(kmeans_s1_5cl_d, as.numeric(clusters5_s1_spread$cluster_kmeans_5))
diagnostics_kmeans_s2_3cl <- cluster.stats(kmeans_s2_3cl_d, as.numeric(clusters3_s2_spread$cluster_kmeans_3))
diagnostics_kmeans_s2_4cl <- cluster.stats(kmeans_s2_4cl_d <- dist(clusters4_s2_spread[, 6:105]), as.numeric(clusters4_s2_spread$cluster_kmeans_4))
diagnostics_kmeans_s2_5cl <- cluster.stats(kmeans_s2_5cl_d, as.numeric(clusters5_s2_spread$cluster_kmeans_5))
diagnostics_kmeans_s1_s2_3cl <- cluster.stats(kmeans_s1_s2_3cl_d, as.numeric(clusters3_s1_s2_spread$cluster_kmeans_3))
diagnostics_kmeans_s1_s2_5cl <- cluster.stats(kmeans_s1_s2_5cl_d, as.numeric(clusters5_s1_s2_spread$cluster_kmeans_5))
diagnostics_kmeans_cont_3cl <- cluster.stats(kmeans_cont_3cl_d, as.numeric(clusters3_cont_spread$cluster_kmeans_3))
diagnostics_kmeans_cont_5cl <- cluster.stats(kmeans_cont_5cl_d,  as.numeric(clusters5_cont_spread$cluster_kmeans_5))

```


K-shape
```{r}
#requires execution of "clustering - kshape_dtw.Rmd"

#Create Distance Matrices for clusters
kshape_s1_2cl_d <- dist(clusters_s1_shape2_spread[, 5:105])
kshape_s2_4cl_d <- dist(clusters_s2_shape4_spread[, 5:105])
kshape_cont_5cl_d <- dist(clusters_cont_shape5_spread[, 4:104])

#Diagnostics
diagnostics_kshape_s1_2cl <- cluster.stats(kshape_s1_2cl_d, as.numeric(clusters_s1_shape2_spread$cluster_shape_2))
diagnostics_kshape_s2_4cl <- cluster.stats(kshape_s2_4cl_d, as.numeric(clusters_s2_shape4_spread$cluster_shape_4))
diagnostics_kshape_cont_5cl <- cluster.stats(kshape_cont_5cl_d, as.numeric(clusters_cont_shape5_spread$cluster_shape_5))



```


DTW
```{r}
#requires execution of "clustering - kshape_dtw.Rmd"

#Create Distance Matrices for clusters
dtw_s1_3cl_d <- dist(clusters_s1_dtw3_spread[, 5:105])
dtw_s2_2cl_d <- dist(clusters_s2_dtw2_spread[, 5:105])
dtw_cont_3cl_d <- dist(clusters_cont_dtw3_spread[, 4:104])


#Diagnostics
diagnostics_dtw_s1_3cl <- cluster.stats(dtw_s1_3cl_d, as.numeric(clusters_s1_dtw3_spread$cluster_dtw_3))
diagnostics_dtw_s2_2cl <- cluster.stats(dtw_s2_2cl_d, as.numeric(clusters_s2_dtw2_spread$cluster_dtw_2))
diagnostics_dtw_cont_3cl <- cluster.stats(dtw_cont_3cl_d, as.numeric(clusters_cont_dtw3_spread$cluster_dtw_3))

```

compile together for comparison 
```{r}
#gather diagnostic names, list all diagnostics objects
d_names <- ls()[grep("diagnostics", ls())]
d_list <- mget(ls()[grep("diagnostics", ls())])


#generate df with statsitics of interest for comparation
diagnostic_df <- as.data.frame(NA)

for (n in 1:length(d_names)){
  diagnostic_df[n, 1] <- paste(d_names[n])
  diagnostic_df[n, 2] <- d_list[[n]]["average.between"]
  diagnostic_df[n, 3] <- d_list[[n]]["average.within"]
  diagnostic_df[n, 4] <- d_list[[n]]["entropy"]
}


#add information for decision making
colnames(diagnostic_df)[1] <- "name"
diagnostic_df$clusters <- ifelse(grepl("5cl", diagnostic_df$name) == 1, 5,
                                 ifelse(grepl("4cl", diagnostic_df$name) == 1, 4,
                                 ifelse(grepl("3cl", diagnostic_df$name) == 1, 3,
                                 ifelse(grepl("2cl", diagnostic_df$name) == 1, 2, 0))))


diagnostic_df$algorithm <- ifelse(grepl("kmeans", diagnostic_df$name) == 1, "kmeans",
                                 ifelse(grepl("kshape", diagnostic_df$name) == 1, "kshape",
                                 ifelse(grepl("PCA", diagnostic_df$name) == 1, "PCA",
                                 ifelse(grepl("tadpole", diagnostic_df$name) == 1, "tadpole",
                                 ifelse(grepl("dtw", diagnostic_df$name) == 1, "DTW", 0)))))

diagnostic_df$data <- ifelse(grepl("s1", diagnostic_df$name) == 1, "s1",
                                 ifelse(grepl("s2", diagnostic_df$name) == 1, "s2",
                                 ifelse(grepl("s1_s2", diagnostic_df$name) == 1, "s1_s2",
                                 ifelse(grepl("cont", diagnostic_df$name) == 1, "cont", 0))))

diagnostic_df$data <- ifelse(grepl("s1_s2", diagnostic_df$name) == 1, "s1_s2",
                                    diagnostic_df$data)
```

```{r}
write.csv(diagnostic_df, "cluster diagnostics - raw normalized.csv")

a <- datatable(diagnostic_df)

```
